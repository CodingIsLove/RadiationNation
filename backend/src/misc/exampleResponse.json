"D:\Program Files\nodejs\node.exe" D:\D-Drive\GitRepositories\Github\RadiationNation\backend\node_modules\mocha\bin\mocha --require ts-node/register --ui bdd --reporter "D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\NodeJS\js\mocha-intellij\lib\mochaIntellijReporter.js" D: \D-Drive\GitRepositories\Github\RadiationNation\backend\src\tests\userInstanceTest.ts --grep "^User API Tests should register a new user$"
IncomingMessage {
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList {head: null, tail: null, length: 0},
length: 0,
pipes: null,
pipesCount: 0,
flowing: true,
ended: true,
endEmitted: true,
reading: false,
sync: false,
needReadable: false,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
paused: false,
emitClose: true,
destroyed: false,
defaultEncoding: 'utf8',
awaitDrain: 0,
readingMore: false,
decoder: StringDecoder {
encoding: 'latin1',
[Symbol(kNativeDecoder)]: <Buffer 00 00 00 00 00 00 04>},
encoding: 'latin1'
},
readable: false,
_events:
[Object: null prototype] {
end: [[Function: responseOnEnd], [Function]],
data: [Function] },
_eventsCount: 2,
_maxListeners: undefined,
socket: Socket {
connecting: false,
_hadError: false,
_handle: TCP {
reading: true,
onread: [Function: onStreamRead],
onconnection: null,
[Symbol(owner)]: [Circular] },
_parent: null,
_host: 'localhost',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList {head: null, tail: null, length: 0},
length: 0,
pipes: null,
pipesCount: 0,
flowing: true,
ended: false,
endEmitted: false,
reading: false,
sync: false,
needReadable: true,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
paused: false,
emitClose: false,
destroyed: false,
defaultEncoding: 'utf8',
awaitDrain: 0,
readingMore: true,
decoder: null,
encoding: null
},
readable: true,
_events:
[Object: null prototype] {
end: [Function: onReadableStreamEnd],
free: [Function: onFree],
close: [Array],
agentRemove: [Function: onRemove],
drain: [Function: ondrain],
error: [Function: socketErrorListener],
finish: [Function] },
_eventsCount: 7,
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: false,
destroyed: false,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
bufferedRequest: null,
lastBufferedRequest: null,
pendingcb: 1,
prefinished: false,
errorEmitted: false,
emitClose: false,
bufferedRequestCount: 0,
corkedRequestsFree: [Object] },
writable: false,
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: null,
_httpMessage: ClientRequest {
_events: [Object],
_eventsCount: 3,
_maxListeners: undefined,
output: [],
outputEncodings: [],
outputCallbacks: [],
outputSize: 0,
writable: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 0,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
socket: [Circular],
connection: [Circular],
_header: 'POST /api/user/register HTTP/1.1\r\nAccept: */*\r\nUser-Agent: Restler for node.js\r\nHost: localhost:8081\r\nAccept-Encoding: gzip, deflate\r\nAuthorization: Basic Y2hyaXM6Y2hyaXM=\r\nContent-Length: 0\r\nConnection: close\r\n\r\n',
_onPendingData: [Function: noopPendingOutput],
agent: [Agent],
socketPath: undefined,
timeout: undefined,
method: 'POST',
path: '/api/user/register',
_ended: true,
res: [Circular],
aborted: undefined,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
[Symbol(isCorked)]: false,
[Symbol(outHeadersKey)]: [Object] },
[Symbol(asyncId)]: 26,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
connection: Socket {
connecting: false,
_hadError: false,
_handle: TCP {
reading: true,
onread: [Function: onStreamRead],
onconnection: null,
[Symbol(owner)]: [Circular] },
_parent: null,
_host: 'localhost',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList {head: null, tail: null, length: 0},
length: 0,
pipes: null,
pipesCount: 0,
flowing: true,
ended: false,
endEmitted: false,
reading: false,
sync: false,
needReadable: true,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
paused: false,
emitClose: false,
destroyed: false,
defaultEncoding: 'utf8',
awaitDrain: 0,
readingMore: true,
decoder: null,
encoding: null
},
readable: true,
_events:
[Object: null prototype] {
end: [Function: onReadableStreamEnd],
free: [Function: onFree],
close: [Array],
agentRemove: [Function: onRemove],
drain: [Function: ondrain],
error: [Function: socketErrorListener],
finish: [Function] },
_eventsCount: 7,
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: false,
destroyed: false,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
bufferedRequest: null,
lastBufferedRequest: null,
pendingcb: 1,
prefinished: false,
errorEmitted: false,
emitClose: false,
bufferedRequestCount: 0,
corkedRequestsFree: [Object] },
writable: false,
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: null,
_httpMessage: ClientRequest {
_events: [Object],
_eventsCount: 3,
_maxListeners: undefined,
output: [],
outputEncodings: [],
outputCallbacks: [],
outputSize: 0,
writable: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 0,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
socket: [Circular],
connection: [Circular],
_header: 'POST /api/user/register HTTP/1.1\r\nAccept: */*\r\nUser-Agent: Restler for node.js\r\nHost: localhost:8081\r\nAccept-Encoding: gzip, deflate\r\nAuthorization: Basic Y2hyaXM6Y2hyaXM=\r\nContent-Length: 0\r\nConnection: close\r\n\r\n',
_onPendingData: [Function: noopPendingOutput],
agent: [Agent],
socketPath: undefined,
timeout: undefined,
method: 'POST',
path: '/api/user/register',
_ended: true,
res: [Circular],
aborted: undefined,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
[Symbol(isCorked)]: false,
[Symbol(outHeadersKey)]: [Object] },
[Symbol(asyncId)]: 26,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
headers: {'access-control-allow-origin': '*',
'content-type': 'application/json; charset=utf-8',
'content-length': '709',
etag: 'W/"2c5-DxlH6xscrxZRLf8Gw8GXnKso5vQ"',
'set-cookie':
['connect.sid=s%3AlAnath0G12IbG93poIvVHrZiy7FJst4w.L%2FsPpGPLJ6k%2FPCbJ2Lp1jIETOY7cjLDRuCLgcbi9C7s; Path=/; HttpOnly'],
date: 'Thu, 11 Jun 2020 07:08:13 GMT',
connection: 'close'
},
rawHeaders:
[
'Access-Control-Allow-Origin',
'*',
'Content-Type',
'application/json; charset=utf-8',
'Content-Length',
'709',
'ETag',
'W/"2c5-DxlH6xscrxZRLf8Gw8GXnKso5vQ"',
'Set-Cookie',
'connect.sid=s%3AlAnath0G12IbG93poIvVHrZiy7FJst4w.L%2FsPpGPLJ6k%2FPCbJ2Lp1jIETOY7cjLDRuCLgcbi9C7s; Path=/; HttpOnly',
'Date',
'Thu, 11 Jun 2020 07:08:13 GMT',
'Connection',
'close'
],
trailers: {
},
rawTrailers: [],
aborted: false,
upgrade: false,
url: '',
method: null,
statusCode: 400,
statusMessage: 'Bad Request',
client: Socket {
connecting: false,
_hadError: false,
_handle: TCP {
reading: true,
onread: [Function: onStreamRead],
onconnection: null,
[Symbol(owner)]: [Circular] },
_parent: null,
_host: 'localhost',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList {head: null, tail: null, length: 0},
length: 0,
pipes: null,
pipesCount: 0,
flowing: true,
ended: false,
endEmitted: false,
reading: false,
sync: false,
needReadable: true,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
paused: false,
emitClose: false,
destroyed: false,
defaultEncoding: 'utf8',
awaitDrain: 0,
readingMore: true,
decoder: null,
encoding: null
},
readable: true,
_events:
[Object: null prototype] {
end: [Function: onReadableStreamEnd],
free: [Function: onFree],
close: [Array],
agentRemove: [Function: onRemove],
drain: [Function: ondrain],
error: [Function: socketErrorListener],
finish: [Function] },
_eventsCount: 7,
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: false,
destroyed: false,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
bufferedRequest: null,
lastBufferedRequest: null,
pendingcb: 1,
prefinished: false,
errorEmitted: false,
emitClose: false,
bufferedRequestCount: 0,
corkedRequestsFree: [Object] },
writable: false,
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: null,
_httpMessage: ClientRequest {
_events: [Object],
_eventsCount: 3,
_maxListeners: undefined,
output: [],
outputEncodings: [],
outputCallbacks: [],
outputSize: 0,
writable: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 0,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
socket: [Circular],
connection: [Circular],
_header: 'POST /api/user/register HTTP/1.1\r\nAccept: */*\r\nUser-Agent: Restler for node.js\r\nHost: localhost:8081\r\nAccept-Encoding: gzip, deflate\r\nAuthorization: Basic Y2hyaXM6Y2hyaXM=\r\nContent-Length: 0\r\nConnection: close\r\n\r\n',
_onPendingData: [Function: noopPendingOutput],
agent: [Agent],
socketPath: undefined,
timeout: undefined,
method: 'POST',
path: '/api/user/register',
_ended: true,
res: [Circular],
aborted: undefined,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
[Symbol(isCorked)]: false,
[Symbol(outHeadersKey)]: [Object] },
[Symbol(asyncId)]: 26,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
_consuming: true,
_dumped: false,
req: ClientRequest {
_events:
[Object: null prototype] {
response: [Function],
error: [Function],
prefinish: [Function: requestOnPrefinish] },
_eventsCount: 3,
_maxListeners: undefined,
output: [],
outputEncodings: [],
outputCallbacks: [],
outputSize: 0,
writable: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 0,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
socket: Socket {
connecting: false,
_hadError: false,
_handle: [TCP],
_parent: null,
_host: 'localhost',
_readableState: [ReadableState],
readable: true,
_events: [Object],
_eventsCount: 7,
_maxListeners: undefined,
_writableState: [WritableState],
writable: false,
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: null,
_httpMessage: [Circular],
[Symbol(asyncId)]: 26,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
connection: Socket {
connecting: false,
_hadError: false,
_handle: [TCP],
_parent: null,
_host: 'localhost',
_readableState: [ReadableState],
readable: true,
_events: [Object],
_eventsCount: 7,
_maxListeners: undefined,
_writableState: [WritableState],
writable: false,
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: null,
_server: null,
parser: null,
_httpMessage: [Circular],
[Symbol(asyncId)]: 26,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
_header: 'POST /api/user/register HTTP/1.1\r\nAccept: */*\r\nUser-Agent: Restler for node.js\r\nHost: localhost:8081\r\nAccept-Encoding: gzip, deflate\r\nAuthorization: Basic Y2hyaXM6Y2hyaXM=\r\nContent-Length: 0\r\nConnection: close\r\n\r\n',
_onPendingData: [Function: noopPendingOutput],
agent: Agent {
_events: [Object],
_eventsCount: 1,
_maxListeners: undefined,
defaultPort: 80,
protocol: 'http:',
options: [Object],
requests: {
},
sockets: [Object],
freeSockets: {
},
keepAliveMsecs: 1000,
keepAlive: false,
maxSockets: Infinity,
maxFreeSockets: 256},
socketPath: undefined,
timeout: undefined,
method: 'POST',
path: '/api/user/register',
_ended: true,
res: [Circular],
aborted: undefined,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
[Symbol(isCorked)]: false,
[Symbol(outHeadersKey)]:
[Object: null prototype] {
accept: [Array],
'user-agent': [Array],
host: [Array],
'accept-encoding': [Array],
authorization: [Array],
'content-length': [Array] }},
rawEncoded: '{"err":{"errors":{"username":{"message":"Please include your name","name":"ValidatorError","properties":{"message":"Please include your name","type":"required","path":"username"},"kind":"required","path":"username"},"password":{"message":"please include your password","name":"ValidatorError","properties":{"message":"please include your password","type":"required","path":"password"},"kind":"required","path":"password"},"email":{"message":"Please include your email","name":"ValidatorError","properties":{"message":"Please include your email","type":"required","path":"email"},"kind":"required","path":"email"}},"_message":"User validation failed","message":"something went wrong","name":"ValidationError"}}',
raw: <Buffer 7b 22 65 72 72 22 3a 7b 22 65 72 72 6f 72 73 22 3a 7b 22 75 73 65 72 6e 61 6d 65 22 3a 7b 22 6d 65 73 73 61 67 65 22 3a 22 50 6c 65 61 73 65 20 69 6e ... >
}
